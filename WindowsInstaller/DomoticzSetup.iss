; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Domoticz"
#define AppId "{{EC4A5746-2655-43CD-AC5F-73F4B2C12F46}"
#define MyAppPublisher "Domoticz.com"
#define MyAppURL "http://www.domoticz.com/"
#define MyAppExeName "domoticz.exe"
#define NSSM "nssm.exe"
#define SetupBaseName   "DomoticzSetup_"
#dim Version[4]
#expr ParseVersion("..\Release\domoticz.exe", Version[0], Version[1], Version[2], Version[3])
#define AppVersion Str(Version[0]) + "." + Str(Version[1]) + "." + Str(Version[2]) + "." + Str(Version[3])
#define ShortAppVersion Str(Version[0]) + "." + Str(Version[3])
#define ShortAppVersionUnderscore Str(Version[0]) + "_" + Str(Version[3])

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#AppId}
AppName={#MyAppName}
AppVersion={#ShortAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=..\domoticz\License.txt
OutputDir=.
OutputBaseFilename={#SetupBaseName + ShortAppVersionUnderscore}
SetupIconFile=install.ico
Compression=lzma2
PrivilegesRequired=admin
SolidCompression=yes
UsePreviousAppDir=yes
DirExistsWarning=no
WizardImageFile=compiler:WizModernImage-IS.bmp
WizardSmallImageFile=compiler:WizModernSmallImage-IS.bmp

[Tasks]
Name: RunAsApp; Description: "Run as application "; Flags: exclusive;
Name: RunAsApp\desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; 
Name: RunAsApp\quicklaunchicon; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked;
Name: RunAsApp\startupicon; Description: "Create a Startup Shortcut"; GroupDescription: "{cm:AdditionalIcons}"; 
Name: RunAsService; Description: "Run as service"; Flags: exclusive unchecked

[Files]
Source: "..\Release\domoticz.exe"; DestDir: {app}; Flags: ignoreversion;
Source: "..\domoticz\www\*"; DestDir: {app}\www; Flags: recursesubdirs createallsubdirs;
Source: "..\domoticz\Config\*"; DestDir: {app}\www; Flags: recursesubdirs createallsubdirs;
Source: "..\domoticz\scripts\*"; DestDir: {app}\scripts; Flags: recursesubdirs createallsubdirs;
Source: "..\Debug\sqlite3.dll"; DestDir: {app}; Flags: ignoreversion;
Source: "..\Release\OpenZWave.dll"; DestDir: {app}; Flags: ignoreversion;
Source: "..\Debug\libcurl.dll"; DestDir: {app}; Flags: ignoreversion;
Source: "..\Manual\DomoticzManual.pdf"; DestDir: {app}; Flags: ignoreversion;
Source: "..\domoticz\History.txt"; DestDir: {app}; Flags: ignoreversion;
Source: "..\domoticz\svnversion.h"; DestDir: {app}; Flags: ignoreversion;
Source: "..\Release\nssm.exe"; DestDir: {app}; Flags: ignoreversion;

[Icons]
Name: "{group}\Domoticz"; Filename: "{app}\{#MyAppExeName}"; Parameters: "-www {code:GetParams}"; Tasks: RunAsApp; 
;Name: "{group}\Start Domoticz service"; Filename: "sc"; Parameters: "start {#MyAppName}"; Tasks: RunAsService; 
;Name: "{group}\Stop Domoticz service"; Filename: "sc"; Parameters: "stop {#MyAppName}"; Tasks: RunAsService; 
Name: "{group}\DomoticzManual.pdf"; Filename: "{app}\DomoticzManual.pdf"; 
Name: "{group}\{cm:ProgramOnTheWeb,Domoticz}"; Filename: "{#MyAppURL}";
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"; 
Name: "{commonstartup}\Domoticz"; Filename: "{app}\{#MyAppExeName}"; Parameters: "-startupdelay 10 -www {code:GetParams}" ; Tasks: RunAsApp\startupicon
Name: "{commondesktop}\Domoticz"; Filename: "{app}\{#MyAppExeName}"; Parameters: "-www {code:GetParams}" ; Tasks: RunAsApp\desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\Domoticz"; Filename: "{app}\{#MyAppExeName}"; Tasks: RunAsApp\quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, "&", "&&")}}"; Flags: nowait postinstall skipifsilent runascurrentuser; Tasks: RunAsApp
Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppName} ""{app}\{#MyAppExeName}"" ""-www {code:GetParams}"""; Flags: runhidden; Tasks: RunAsService
Filename: "{sys}\net.exe"; Parameters: "start {#MyAppName}"; Flags: runhidden; Tasks: RunAsService

[Dirs]
Name: "{app}\backups\hourly"
Name: "{app}\backups\daily"
Name: "{app}\backups\monthly"
Name: "{app}\Config"

[PostCompile]
Name: "makedist.bat"

[Code]
var
  ConfigPage: TInputQueryWizardPage;

function GetParams(Value: string): string;
begin
  Result := ConfigPage.Values[0];
end;

procedure InitializeWizard;
begin
  // Create the page
  ConfigPage := CreateInputQueryPage(wpSelectComponents,
  'User settings', 'Port number', 'Please specify the port on which Domoticz will run');
  // Add items (False means it's not a password edit)
  ConfigPage.Add('Port number:', False);
  // Set initial values (optional)
  ConfigPage.Values[0] := ExpandConstant('8080');
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  if(CurStep = ssInstall) then begin
    Exec('sc',ExpandConstant('stop "{#MyAppName}"'),'', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec('sc',ExpandConstant('delete "{#MyAppName}"'),'', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  ResultCode: Integer;
begin
  if CurUninstallStep = usUninstall then begin
    Exec('sc',ExpandConstant('stop "{#MyAppName}"'),'', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    Exec('sc',ExpandConstant('delete "{#MyAppName}"'),'', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    sleep(4000); //allow service to stop before deleting files
  end;
end;

function InitializeSetup: Boolean;                                    

begin
  if RegValueExists(HKEY_LOCAL_MACHINE,'Software\Microsoft\Windows\CurrentVersion\Uninstall\{#emit StringChange(SetupSetting("AppId"),"{{","{")}_is1', 'UninstallString') then begin
    MsgBox('You are upgrading an existing installation of Domoticz.'+ chr(13) +'It is recommended to reboot your system after this upgrade'+ chr(13) +'in order to avoid com port issues.', mbInformation, MB_OK);
  end
  Result := True;
end;
