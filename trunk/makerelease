#!/bin/sh

#you need to install sshpass (sudo apt-get install sshpass)

DOCUMENT_ROOT="/home/linaro/dev-domoticz"
SVN_SERVER="svn://svn.code.sf.net/p/domoticz/code/trunk"
SVN_UPLOAD_USER="USERNAME"
SVN_UPLOAD_PASSWORD="PASSWORD"

lowercase(){
    echo "$1" | sed "y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/"
}

OS=`lowercase \`uname -s\``
#KERNEL=`uname -r`
MACH=`uname -m`

archive_file="domoticz_${OS}_${MACH}.tgz"
version_file="version_${OS}_${MACH}.h"
history_file="history_${OS}_${MACH}.txt"
 
echo "Changing directories to $DOCUMENT_ROOT..."
cd $DOCUMENT_ROOT

# Check the servers revision number:
echo "Checking the server revision..."
SERVER_REVISION=`svn info $SVN_SERVER | grep Revision: | sed 's .\{10\}  '`
echo "Server at revision $SERVER_REVISION"
echo "Checking the working copy revision..."
LOCAL_REVISION=`svn info | grep Revision: | sed 's .\{10\}  '`
echo "Working copy at revision $LOCAL_REVISION"

if [ "$SERVER_REVISION" -eq "$LOCAL_REVISION" ]
then
    echo "Server is up to date. Nothing to do."
    exit 1
fi

echo "Updating to server revision..."
svn update
if [ $? -ne 0 ]
then
	echo "svnupdate failed!";
	exit 1
fi
cmake -DCMAKE_BUILD_TYPE=Release .
if [ $? -ne 0 ]
then
	echo "CMake failed!";
	exit 1
fi
make -j 2
if [ $? -ne 0 ]
then
	echo "Compilation failed!";
	exit 1
fi 
echo "Success, making release...";

cp -f svnversion.h ${version_file}
cp -f History.txt ${history_file}

#Generate the archive
echo "Generating Archive: ${archive_file}..."

if [ -f ${archive_file} ];
then
  rm ${archive_file}
fi

tar -zcf ${archive_file} domoticz History.txt License.txt svnversion.h domoticz.sh www/ scripts/ Config/
if [ $? -ne 0 ]
then
        echo "Error creating archive!";
        exit 1
fi

#################################
echo "Uploading to SourceForge...";
sshpass -p ${SVN_UPLOAD_PASSWORD} scp ${archive_file} ${version_file} ${history_file} ${SVN_UPLOAD_USER}@web.sourceforge.net:/home/project-web/domoticz/htdocs
if [ $? -ne 0 ]
then
        echo "Error uploading to SourceForge!";
        exit 1
fi

#################################

#cleaning up
rm -f ${version_file}
rm -f ${history_file}

echo "Done!";
exit 0; 
